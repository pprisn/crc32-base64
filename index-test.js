const crc32 = require('./build/Release/crc32_base64.node')
// properties on exports object
console.log('exports : ', crc32)
console.log()

//execute crc32Module function
console.log('TEST1: 2114391195')
console.log('crc32.IEEE(PD94bWwgd...) :',crc32.IEEE(``))

console.log('TEST2: 310858088')
console.log('crc32.IEEE(MIIPawYJ...) :',crc32.IEEE(`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`))

